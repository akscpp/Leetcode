class Solution {
public:
    int f(int ind , int amount , vector<int>& coins,vector<vector<int>> &dp){
        if(ind==0){
            if(amount%coins[0]==0){
                return 1;
            }else return 0;
        }
        if(dp[ind][amount]!=-1){
            return dp[ind][amount];
        }

        int nT=0+f(ind-1,amount,coins,dp);
        int T=0;
        if(amount-coins[ind]>=0){
            T=f(ind,amount-coins[ind],coins,dp);
        }

        return dp[ind][amount]=nT+T;
    }
    int change(int amount, vector<int>& coins) {
        int n=coins.size();
        vector<vector<int>>dp(n+1,vector<int>(amount+1,0));
        for(int i=0;i<=n;i++){
            dp[i][0]=1;
        }
        for(int ind=1;ind<=n;ind++){
            for(int j=0;j<=amount;j++){
                int nT=0+dp[ind-1][j];
                int T=0;
                if(j-coins[ind-1]>=0){
                    T=dp[ind][j-coins[ind-1]];
                }
                dp[ind][j]=nT+T;

            }
        }

        return dp[n][amount];
    }
};
