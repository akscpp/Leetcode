class Solution {
public:
    bool isPossible(vector<int>& dist, double hour,int mid){
        pair<int,bool>p;
        double T=0;
        for(int i=0;i<dist.size();i++){
            double time=(double)dist[i]/mid;
            if(i!=dist.size()-1){
                T+=ceil(time);
            }else{
                T+=time;
            }

            if(T>hour){
                return false;
            }
                
        }
        if(T<=hour){
            return true;
        }
        else    return false;
    }
    int minSpeedOnTime(vector<int>& dist, double hour) {
        int l=1;
        int h=1e7;
        int ans=-1;
        while(l<=h){
            int mid=(l+h)/2;
            if(isPossible(dist,hour,mid)){
                ans=mid;
                h=mid-1;
            }else{
                l=mid+1;
            }
           
        }
        return ans;
    }   
    
};
