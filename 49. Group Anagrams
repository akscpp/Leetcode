class Solution {
public:
    vector<vector<string>> groupAnagrams(vector<string>& strs) {
        int n=strs.size();
        if(n==0){
            return {{}};
        }
        if(n==1){
            return {{strs[0]}};
        }
        // vector<vector<string>>ans;
        // int arr[n];
        // memset(arr, 0, sizeof(arr));
        // for(int i=0;i<n;i++){
        //     if(arr[i]!=1){
        //     vector<string>temp;
        //     string x=strs[i];
        //     temp.push_back(x);
        //     sort(x.begin(),x.end());
        //     for(int j=i+1;j<n;j++){
        //         string k=strs[j];
        //         sort(k.begin(),k.end());
        //         if(x==k){
        //             arr[j]=1;
        //             temp.push_back(strs[j]);
        //         }
        //     }
        //     ans.push_back(temp);
        // }
            
        // }
        // return ans;
        unordered_map<string,vector<string>>mp;
        for(auto it:strs){
            string key=it;
            sort(key.begin(),key.end());
            mp[key].push_back(it);
        }

        vector<vector<string>>ans;
        for(auto it:mp){
            ans.push_back(it.second);
        }
        return ans;
    }
};
