/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    vector<ListNode*> splitListToParts(ListNode* head, int k) {
       vector<ListNode*>ans(k,nullptr);

       int count = 0;
       ListNode *p = head;
       while(p){
           count++;
           p=p->next;
       } 

       int n = count/k;
       int rm = count%k;
        ListNode *curr  = head , *prev = NULL;
       for(int i = 0 ; i < k && curr!=NULL;i ++,rm--){
           ans[i]=curr;
           for(int j = 0 ; j < n + (rm > 0); j++){
               prev = curr;
               curr = curr->next;
           }
           prev->next = NULL;
       }

       return ans;
    }
};
