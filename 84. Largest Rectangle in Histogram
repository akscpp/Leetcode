class Solution {
public:
    vector<int> NextSmaller(vector<int>& arr ){
        int n=arr.size();
        vector<int>ans(n);
        stack<int>st;
        st.push(-1);
        
        
        for(int i=n-1;i>=0;i--){
            int curr=arr[i];
            while(st.top()!=-1 && arr[st.top()]>=arr[i]){
                st.pop();
            }
            ans[i]=st.top();
            st.push(i);
        }
        return ans;

    }

    vector<int>PreviousSmaller(vector<int> &arr){
        int n=arr.size();
        vector<int>ans(n);
        stack<int>st;
        st.push(-1);
        
        for(int i=0;i<n;i++){
            int curr=arr[i];
            while(st.top()!=-1 && arr[st.top()]>=arr[i]){
                st.pop();
            }
            ans[i]=st.top();
            st.push(i);
        }
        return ans;
    }
    int largestRectangleArea(vector<int>& heights) {
        int n=heights.size();
        vector<int>next(n);
        vector<int>prev(n);
        next=NextSmaller(heights);
        prev=PreviousSmaller(heights);
        int maxi=INT_MIN;
        for(int i=0;i<n;i++){
            int l=heights[i];
            if(next[i]==-1){
                next[i]=n;
            }
            int b=next[i]-prev[i]-1;
            int area=l*b;
            maxi=max(maxi,area);
        }
        return maxi;
        

    }
};
